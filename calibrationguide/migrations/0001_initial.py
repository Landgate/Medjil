# Generated by Django 4.1.9 on 2025-01-24 06:07

import calibrationguide.models
import common_func.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("accounts", "0009_alter_calibration_report_notes_accreditation"),
    ]

    operations = [
        migrations.CreateModel(
            name="MedjilGuideToSiteCalibration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "site_type",
                    models.CharField(
                        choices=[
                            (None, "--- Select Type ---"),
                            ("baseline", "EDM Baseline"),
                            ("range", "Staff Range"),
                        ],
                        max_length=24,
                        null=True,
                        verbose_name="Site Type",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="e.g., Medjil User Guide to Staff Calibration",
                        max_length=200,
                    ),
                ),
                (
                    "content_book",
                    models.FileField(
                        blank=True,
                        help_text="Upload a User Guide or handbook in pdf format",
                        null=True,
                        upload_to=calibrationguide.models.get_upload_to_medjil,
                        validators=[common_func.validators.validate_file_size],
                        verbose_name="User Guide",
                    ),
                ),
                (
                    "pub_date",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Published on"
                    ),
                ),
                (
                    "mod_date",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="Last Modified"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.location",
                        verbose_name="Location",
                    ),
                ),
            ],
            options={
                "ordering": ["location", "site_type"],
            },
        ),
        migrations.CreateModel(
            name="MedjilGuide",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="e.g., Medjil User Guide", max_length=200
                    ),
                ),
                (
                    "medjil_book",
                    models.FileField(
                        blank=True,
                        help_text="Upload a Medjil User Guide or handbook in pdf format",
                        null=True,
                        upload_to=calibrationguide.models.get_upload_to_medjil,
                        validators=[common_func.validators.validate_file_size],
                        verbose_name="User Guide",
                    ),
                ),
                (
                    "pub_date",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Published on"
                    ),
                ),
                (
                    "mod_date",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="Last Modified"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["title", "author"],
            },
        ),
        migrations.CreateModel(
            name="CalibrationGuide",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "calibration_type",
                    models.CharField(
                        choices=[
                            (None, "--- Select Type ---"),
                            (
                                "Site Calibration",
                                (
                                    ("baseline", "EDM Baseline"),
                                    ("range", "Staff Range"),
                                ),
                            ),
                            (
                                "Instrument Calibration",
                                (
                                    ("edmi", "Electronic Distance Measurement"),
                                    ("staff", "Barcoded Staff"),
                                ),
                            ),
                        ],
                        max_length=24,
                        null=True,
                        verbose_name="Calibration Type",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="e.g., EDMI Calibration in Western Australia",
                        max_length=200,
                    ),
                ),
                (
                    "content_book",
                    models.FileField(
                        blank=True,
                        help_text="Upload a user guide or handbook in pdf format",
                        null=True,
                        upload_to=calibrationguide.models.get_upload_to_content,
                        validators=[common_func.validators.validate_file_size],
                        verbose_name="User Guide",
                    ),
                ),
                (
                    "pub_date",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Published on"
                    ),
                ),
                (
                    "mod_date",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="Last Modified"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.location",
                        verbose_name="Location",
                    ),
                ),
            ],
            options={
                "ordering": ["location", "calibration_type"],
            },
        ),
        migrations.AddConstraint(
            model_name="medjilguidetositecalibration",
            constraint=models.UniqueConstraint(
                fields=("location", "site_type"),
                name="unique_site_instance",
                violation_error_message="The user guide for already exists for this location.",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="medjilguidetositecalibration",
            unique_together={("location", "site_type")},
        ),
        migrations.AddConstraint(
            model_name="medjilguide",
            constraint=models.UniqueConstraint(
                fields=("title", "author"),
                name="unique_medjil_instance",
                violation_error_message="The user guide for already exists for this location.",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="medjilguide",
            unique_together={("title", "author")},
        ),
        migrations.AddConstraint(
            model_name="calibrationguide",
            constraint=models.UniqueConstraint(
                fields=("location", "calibration_type"),
                name="unique_guide_instance",
                violation_error_message="The user guide for already exists for this location.",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="calibrationguide",
            unique_together={("location", "calibration_type")},
        ),
    ]
