'''

   Â© 2023 Western Australian Land Information Authority

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

'''
"""
Django settings for Medjil project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url
from django.conf import settings
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve(strict=True).parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'd%t^naj(!0x3-te!aq@gt=2wze9^oqs=3)k3$_(ng7c4d8bk_%'
SECRET_KEY = os.environ.get('MEDJIL_SECRET_KEY')
if not SECRET_KEY: 
    SECRET_KEY = 'xxy656@qziuc(5bq)0wjo)kwd(#_(6ylzah#2-iju9t*0g4_q!'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = int(os.environ.get('DEBUG', default=0))
DEBUG = True
# if DEBUG == True:
#     load_dotenv('.env.dev')
# else:
#     load_dotenv('.env.prod')

ALLOWED_HOSTS = ['.landgate.wa.gov.au','127.0.0.1']
# ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS').split(' ')
CSRF_TRUSTED_ORIGINS = [
    'http://localhost:1337', 
    'http://127.0.0.1:8000',
    'https://medjil0.dev.lb.landgate.wa.gov.au/',
    'https://medjil0.test.lb.landgate.wa.gov.au/',
    'https://medjil0.uat.lb.landgate.wa.gov.au/',
    'https://medjil0.lb.landgate.wa.gov.au/',
    ]

# Add Custom user model
AUTH_USER_MODEL = 'accounts.CustomUser'

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.forms',
    "django_otp",                    # new addition
    "django_otp.plugins.otp_totp",   # new addition
    "qrcode",                        # new addition
    # 'crispy_forms',
    'formtools',
    'accounts',
    'backcapture',
    'calibrationsites',
    'instruments',
    'rangecalibration',
    'staffcalibration',
    'baseline_calibration',
    'edm_calibration',
    'calibrationguide',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    "django_otp.middleware.OTPMiddleware",                        # new addition
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'medjil.urls'

FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'medjil.wsgi.application'
OTP_TOTP_ISSUER = "Medjil - Survey Instrument Calibration"    # addition

CORS_ALLOW_HEADERS = "access-control-allow-origin" # new addition

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

if 'MEDJIL_DB_ENGINE' in os.environ:
    HOST=(os.environ.get('MEDJIL_DB_HOST')).strip('"')
    USER=(os.environ.get('MEDJIL_DB_USER')).strip('"')
    PASSWORD=(os.environ.get('MEDJIL_DB_PASSWORD')).strip('"')
    NAME=(os.environ.get('MEDJIL_DB_NAME')).strip('"')
    ENGINE=(os.environ.get('MEDJIL_DB_ENGINE')).strip('"')
    DATABASES = {
        'default': {
            'ENGINE': ENGINE,
            'NAME': NAME,
            'USER': USER,
            'PASSWORD': PASSWORD,
            'HOST': HOST,
            'PORT': '5432'
        }
    } 
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }

db_from_env = dj_database_url.config(conn_max_age=600)
DATABASES['default'].update(db_from_env)

#DJANG MESSAGE
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/
DATE_INPUT_FORMATS = ('%d-%m-%Y','%Y-%m-%d')
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Australia/Perth'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'assets'),]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
DATA_UPLOAD_MAX_NUMBER_FIELDS = None

#DOCS_URL = '/docs/'
DOCS_ROOT = os.path.join(BASE_DIR, 'docs/_build/html')
DOCS_ACCESS = 'medjil'

#SECURITY SETTINGS
#CSRF Protections
#CSRF_COOKIE_SECURE = True
#CSRF_USE_SESSIONS = False

# Delete Sessions
SESSION_COOKIE_SECURE=True
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 24*3600

# Cross Site Scripting
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True

# Re-direct non HTTPS requests to HTTPS
#SECURE_SSL_REDIRECT = True

# CSP Settings
CSP_SCRIPT_SRC = [
    "https://cdnjs.cloudflare.com",
    "https://cdn.jsdelivr.net",
    "https://code.jquery.com"
]

CSP_STYLE_SRC = ["https://code.cdn.mozilla.net"]


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
    
    {   'NAME': 'medjil.passwordValidators.NumberValidator',
        'OPTIONS': {
            'min_digits': 1, 
            }
    },
    {'NAME': 'medjil.passwordValidators.UppercaseValidator', },
    {'NAME': 'medjil.passwordValidators.LowercaseValidator', },
]



# Simplified static file serving.
# https://warehouse.python.org/project/whitenoise/
STATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'

# Email settings
AUTHENTICATION_BACKENDS = ['django.contrib.auth.backends.AllowAllUsersModelBackend']
                       
EMAIL_BACKEND = 'django_smtp_ssl.SSLEmailBackend'
EMAIL_HOST = 'email-smtp.ap-southeast-2.amazonaws.com'
EMAIL_USE_SSL = False
EMAIL_USE_TLS = True
EMAIL_PORT = 465
EMAIL_HOST_USER = os.environ.get("MEDJIL_EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.environ.get("MEDJIL_EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = os.environ.get('MEDJIL_EMAIL_ADD')
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# redirect url
if 'MEDJIL_ENVIRONMENT' in os.environ:
    LOGIN_REDIRECT_URL = '/'

    DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3StaticStorage'

    ENV=os.environ.get('MEDJIL_ENVIRONMENT')
    
    AWS_STORAGE_BUCKET_NAME = 'lg-medjil-staticfiles-'+ENV

    AWS_QUERYSTRING_AUTH = False
    
    AWS_S3_CUSTOM_DOMAIN = os.environ.get('MEDJIL_CLOUDFRONT_DOMAIN_NAME')
else:
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'